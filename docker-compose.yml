version: '3.7'
services:
  # Main services
  profile_service:
    build: ./profileservice
    restart: unless-stopped
    ports:
      - 10001:8081
    expose:
      - '8081'
    depends_on:
      profileservice_db:
        condition: service_healthy

  auth_service:
    build: ./authservice
    restart: unless-stopped
    ports:
      - 10002:8080
    expose:
      - '8080'
    depends_on:
      authservice_db:
        condition: service_healthy

  course_service:
    build: ./course-management-service
    restart: unless-stopped
    ports:
      - 10003:8080
    expose:
      - '8080'
    depends_on:
      course_db:
        condition: service_healthy

  review_consumer:
    build: ./review-consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy

  review_publisher:
    build: ./review-publisher
    ports:
      - 10004:8080
    expose:
      - '8080'
    depends_on:
      rabbitmq:
        condition: service_healthy

  # Dependencies
  profileservice_db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: 'profileservice_db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - 3307:3306
    expose:
      - '3306'
    volumes:
      - profileservice-db:/var/lib/profileservice
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10

  authservice_db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: 'authservice_db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - 3308:3306
    expose:
      - '3306'
    volumes:
      - authservice-db:/var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10

  course_db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: 'courseservice_db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - 3309:3306
    expose:
      - '3306'
    volumes:
      - courseservice-db:/var/lib/mysql
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10

  mongo:
    image: mongo:7-jammy
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: db
    ports:
      - 27018:27017
    expose:
      - '27017'
    volumes:
      - mongo-db:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    expose:
      - '5672'
      - '15672'
    volumes:
      - ./vol/rabbitmq/data/:/var/lib/rabbitmq/
      - ./vol/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  # Kong Gateway
  kong-database:
    image: postgres:9.6
    container_name: kong-database
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
      - POSTGRES_PASSWORD=kong
    volumes:
      - 'kong-db:/var/lib/postgresql/data'

  kong-migrations:
    image: kong
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_PASSWORD=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
    command: kong migrations bootstrap
    restart: on-failure
    depends_on:
      - kong-database

  kong:
    image: kong
    container_name: kong
    environment:
      - LC_CTYPE=en_US.UTF-8
      - LC_ALL=en_US.UTF-8
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_USER=kong
      - KONG_PG_PASSWORD=kong
      - KONG_CASSANDRA_CONTACT_POINTS=kong-database
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    restart: on-failure
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    links:
      - kong-database:kong-database
    volumes:
      - './kong/protobuf:/usr/local/kong/protobuf'
    depends_on:
      - kong-migrations

  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    links:
      - kong:kong
    container_name: konga
    environment:
      - NODE_ENV=production

# Names our volume
volumes:
  mysql-db:
  mongo-db:
  courseservice-db:
  authservice-db:
  profileservice-db:
  kong-db:
